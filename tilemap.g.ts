// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile0 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile8 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile17 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile20 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile24 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile22 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile23 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile27 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile30 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile15 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile25 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile26 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile18 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile28 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile21 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile19 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile29 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level_5":
            case "level_5":return tiles.createTilemap(hex``, img`
...................................2...
..2222222222222222222222222222222..2...
...................................2...
.........2.........................2...
.....2222222222222222222222222222222...
2......................................
2......................................
222222222222222222222222222222222222222
`, [myTiles.tile0,myTiles.tile1,myTiles.tile2,myTiles.tile3,myTiles.tile4,myTiles.tile6,myTiles.tile5], TileScale.Sixteen);
            case "level_2":
            case "level_2":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . 2 . . . . . . . 
. . . . . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile8,myTiles.tile10,myTiles.tile15,myTiles.tile13], TileScale.Sixteen);
            case "level_6":
            case "level_6":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . 2 2 . . . . . . . . . . . . . . . . . . 
. . . . 2 2 2 2 2 2 2 . . . . . . 2 2 . . 2 2 2 . . . . . 2 2 . . . . . . 
. . . . . . . . . . . 2 . . . . . . . . . . . . . . . . . . . 2 . . . . . 
2 . . . . . . . . 2 . . . . 2 . 2 . . . . . . . 2 . . . . . 2 . 2 . . . . 
2 . . . . . . . . . . . . . . . . . 2 2 . 2 . . . . . . . . . . . 2 . . 2 
2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile10,myTiles.tile13,myTiles.tile15,myTiles.tile11,myTiles.tile25,myTiles.tile8], TileScale.Sixteen);
            case "level":
            case "level":return tiles.createTilemap(hex`a0a07070a0a07070a0a0a070a0a0a07070700000905050500000000000000000000050000050000050000000000000000000000000000000000000000000000000000000000050005050505000000000000000000000500000500000500030300000000000806060606060606060606060606060606060606060202020202020606060606060606060602020202020202020202020202020202`, img`
....................................................
....................................................
....................................................
.........................2.2..2..2..2...............
........................22..........2..2............
2.22..22..222.222......222..........2..2..2.........
....................2.2222..........2..2..2.........
....................222222..........2222222222222222
`, [myTiles.tile0,myTiles.tile8,myTiles.tile9,myTiles.tile10,myTiles.tile11,myTiles.tile12,myTiles.tile13,myTiles.tile14,myTiles.tile15,myTiles.tile16,myTiles.tile7], TileScale.Sixteen);
            case "level_3":
            case "level_3":return tiles.createTilemap(hex``, img`
2222222222222222222222222222222222222222222222222222
22222222222222222222222222222.........2............2
22222222222222222222222222222.........2............2
22222222222222222222222222222.........2............2
222222222222222222222222222222222222..2....222222222
222222222222222....................2..2............2
222222222222222....................2..2............2
222222222222222.22222222222222222..2..2...222222...2
222222222222222.............22222..2..2........2...2
222222222222222.............2...2..2..2........2...2
222222222222222.............2...2..2..2..2..2..2...2
222222222222222.............2...2..2..2..2..2..2...2
222222222222222.............2...2..2..2..22222.2...2
222222222222222.2222222222222...2..2..2........2...2
222222222222222............22...2..2..2........2...2
222222222222222............22...2..2..2..2222222...2
222222222222222.22222222222........................2
222222222222222....................................2
222222222222222....................................2
2222222222222222222222222222222222222222222222222222
`, [myTiles.tile0,myTiles.tile30,myTiles.tile8,myTiles.tile15], TileScale.Sixteen);
            case "level_0":
            case "level_0":return tiles.createTilemap(hex`2000080002020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020606060202020202020202020202020202020202020202020205020202020202060606020202020202020202020202020202020202020202050505020202020206060602020203020202020202020202020202020202020505050505020202020202020202030303020202020202020201020202020205050505050505000000020202020303030303020202020507050404040404040404040404040404040404040404040404040404040404040404`, img`
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 2 2 2 . . . . . . . . . . . . . 
. . . . . . . . . 2 . . . . . . 2 2 2 . . . . . . . . . . . . . 
. . . . . . . . 2 2 2 . . . . . 2 2 2 . . . 2 . . . . . . . . . 
. . . . . . . 2 2 2 2 2 . . . . . . . . . 2 2 2 . . . . . . . . 
. . . . . . 2 2 2 2 2 2 2 . . . . . . . 2 2 2 2 2 . . . . 2 . 2 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile8,myTiles.transparency16,myTiles.tile9,myTiles.tile12,myTiles.tile13,myTiles.tile16,myTiles.tile15], TileScale.Sixteen);
            case "level_1":
            case "level_1":return tiles.createTilemap(hex`32000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050000000800000a`, img`
..................................................
..................................................
..................................................
..................................................
.........................................2........
........................................222..22222
..........................2............22222222222
...................22....222..........222222222222
..................22222222222222.....2222222222222
22222222222.....2222222222222222222222222222222222
`, [myTiles.tile0,myTiles.tile18,myTiles.tile19,myTiles.tile21,myTiles.tile25,myTiles.tile28,myTiles.tile29,myTiles.tile8,myTiles.tile10,myTiles.tile13,myTiles.tile15,myTiles.tile11], TileScale.Sixteen);
            case "level_4":
            case "level_4":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . 2 2 2 2 2 . 2 2 2 . . . . . . . . . . . . 
. . . . . . . . . 2 2 2 . 2 2 2 2 2 2 2 2 2 2 2 2 . . . . . . . 
. . . 2 2 2 2 2 2 2 . . 2 2 2 2 2 2 2 . . . . . . . . . . . . . 
. 2 2 . . . . . 2 2 2 . 2 2 2 2 2 2 2 2 2 2 . . 2 . . . . . . . 
2 2 2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 2 . . 2 2 2 2 2 . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 . 2 2 2 2 2 2 2 . . . . . . 
. 2 2 2 2 2 2 2 2 2 2 . 2 2 2 2 2 . . 2 2 2 . . 2 . . 2 2 . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.tile0,myTiles.tile8,myTiles.tile9,myTiles.tile12,myTiles.tile13,myTiles.tile15,myTiles.tile17], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "tile0":return tile0;
            case "tile1":return tile1;
            case "tile2":return tile2;
            case "tile3":return tile3;
            case "tile4":return tile4;
            case "tile5":return tile5;
            case "tile6":return tile6;
            case "myTile":
            case "tile8":return tile8;
            case "myTile1":
            case "tile10":return tile10;
            case "myTile2":
            case "tile11":return tile11;
            case "myTile7":
            case "tile16":return tile16;
            case "myTile8":
            case "tile17":return tile17;
            case "myTile11":
            case "tile20":return tile20;
            case "myTile15":
            case "tile24":return tile24;
            case "myTile13":
            case "tile22":return tile22;
            case "myTile14":
            case "tile23":return tile23;
            case "myTile18":
            case "tile27":return tile27;
            case "myTile21":
            case "tile30":return tile30;
            case "myTile0":
            case "tile9":return tile9;
            case "myTile3":
            case "tile12":return tile12;
            case "myTile4":
            case "tile13":return tile13;
            case "myTile5":
            case "tile14":return tile14;
            case "myTile22":
            case "tile7":return tile7;
            case "myTile6":
            case "tile15":return tile15;
            case "myTile16":
            case "tile25":return tile25;
            case "myTile17":
            case "tile26":return tile26;
            case "myTile9":
            case "tile18":return tile18;
            case "myTile19":
            case "tile28":return tile28;
            case "myTile12":
            case "tile21":return tile21;
            case "myTile10":
            case "tile19":return tile19;
            case "myTile20":
            case "tile29":return tile29;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
